.btn{
    &, &:link, &:visited{ /* estados inicial e após ser clicado. OBS: Funciona para <button> e <a> */ 
        cursor:pointer;
        position: relative; 
        font-size: $default-font-size;
        text-decoration: none;
        padding: 1.5rem 4rem;
        text-transform: uppercase;
        display: inline-block; /* display inline não aceita padding top e bottom, nem transformações e block ocupa todo espaço disponivel. */
        border-radius: 10rem;
        transition: all .2s; /* propriedades animadas e tempo de animação tem que ser definidos no estado inicial.
        Assim, hover, active e outras pseudo-classes vão ser animadas. */
    }
    
    &--white{
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }

    &--green{
        background-color: $color-primary;
        color: $color-white;

        &::after{
            background-color: $color-primary;
        }
    }
    
    &:hover{ /* pseudo class => : classe 'adicionada' ao elemento quando uma ação é realizada */
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, .2);
        /* movimentação da sombra no eixo X, movimentação da sombra no eixo Y, shadowBlur, color */

        &::after{
            transform:scale(1.4,1.6);
            opacity: 0;
        }
    }
    
    &:active, // enquanto é clicado 
    &:focus{ // for the <button> 
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2); /* shadowX shadowY shadowBlur color */
    }
    
    &::after{ /* pseudo element => :: elemento não escrito em html que se comporta como child do elemento a que se refere */
        content: "";
        width: 100%;
        height: 100%;
        border-radius: 10rem;
        display: inline-block;
        position: absolute;
        top:0;
        left:0;
        z-index: -1;
        transition: all .4s;

        //OBS => pseudo-elements se movimentam com seus pais.

    }
    
    &--animated{
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards; /* backwards: o estilo 0% é aplicado antes da animação começar */
    }
}

.btn-text{
    &:link,
    &:visited{ //This states only apply to <a> buttons, which are better. For it to work with <button>, we have to change that
        display: inline-block;
        color:$color-primary;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        font-size: $default-font-size;
        transition: all .15s;
    }

    &:active{
        background-color: $color-primary;
        color:$color-white;
        box-shadow: 0 .5rem 1rem rgba($color-black,.15);
        transform: translateY(-1px);
    }

    &:hover{
        background-color: $color-primary;
        color:$color-white;
        box-shadow: 0 1rem 2rem rgba($color-black,.15);
        transform: translateY(-2px);
    }
}